{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TasksComponent = class TasksComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.tasks = [];\n    this.message = {\n      \"messagem\": \"\",\n      \"status\": false\n    };\n    this.edit = -1;\n    this.formInput = this.formBuilder.group({\n      task: \"\"\n    });\n  }\n  onSubmit() {\n    if (this.edit === -1) {\n      this.addTask();\n    } else {\n      this.editTask();\n    }\n    setTimeout(() => {\n      this.message.messagem = \"\";\n    }, 3000);\n    this.formInput = this.formBuilder.group({\n      task: \"\"\n    });\n  }\n  addTask() {\n    const taskAux = {\n      id: this.tasks.length + 1,\n      name: this.formInput.value.task,\n      checked: false\n    };\n    const verifyExisty = this.tasks.find(task => task.name === taskAux.name)?.id;\n    if (verifyExisty == undefined) {\n      this.tasks.push(taskAux);\n      this.message.messagem = `Tarefa ${taskAux.name} adicionada com sucesso`;\n      this.message.status = true;\n    } else {\n      this.message.messagem = `Tarefa ${taskAux.name} já existe`;\n      this.message.status = false;\n    }\n  }\n  editTask() {}\n  handleEdit(id) {\n    this.edit = id;\n  }\n  handleChecked(id) {\n    const aux = [...this.tasks];\n    aux.forEach(task => {\n      if (id === task.id) {\n        task.checked = !task.checked;\n      }\n    });\n    this.tasks = aux;\n  }\n  deleteTask(id) {\n    if (window.confirm(`Quer deletar a tarefa ${this.tasks.find(task => task.id === id)?.name}?`)) {\n      const aux = this.tasks.filter(task => task.id !== id);\n      this.message.messagem = `Tarefa ${this.tasks.find(task => task.id === id)?.name} deletada com sucesso`;\n      this.message.status = true;\n      setTimeout(() => {\n        this.message.messagem = \"\";\n        this.tasks = aux;\n      }, 3000);\n    }\n  }\n};\nTasksComponent = __decorate([Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})], TasksComponent);","map":{"version":3,"names":["Component","TasksComponent","constructor","formBuilder","tasks","message","edit","formInput","group","task","onSubmit","addTask","editTask","setTimeout","messagem","taskAux","id","length","name","value","checked","verifyExisty","find","undefined","push","status","handleEdit","handleChecked","aux","forEach","deleteTask","window","confirm","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alerrando\\Projetos-Angular\\todo-list\\src\\app\\tasks\\tasks.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\"\r\n\r\ntype TasksProps = {\r\n  id: number,\r\n  name: string,\r\n  checked: boolean,\r\n}\r\n\r\nexport type MessageProps = {\r\n  messagem: string,\r\n  status: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css'],\r\n})\r\nexport class TasksComponent {\r\n  tasks: TasksProps[] = [];\r\n  formInput: FormGroup;\r\n  message: MessageProps = {\r\n    \"messagem\": \"\",\r\n    \"status\": false,\r\n  };\r\n  edit: number = -1;\r\n\r\n  constructor(private formBuilder: FormBuilder){\r\n    this.formInput = this.formBuilder.group({\r\n      task: \"\",\r\n    });\r\n  }\r\n\r\n  onSubmit(): void{\r\n    if(this.edit === -1){\r\n      this.addTask();\r\n    }\r\n    else{\r\n      this.editTask();\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      this.message.messagem = \"\";\r\n    }, 3000);\r\n\r\n    this.formInput = this.formBuilder.group({\r\n      task: \"\",\r\n    });\r\n  }\r\n\r\n  addTask(){\r\n    const taskAux = {\r\n      id: this.tasks.length + 1,\r\n      name: this.formInput.value.task,\r\n      checked: false,\r\n    }\r\n    const verifyExisty = this.tasks.find((task) => task.name === taskAux.name)?.id;\r\n    if (verifyExisty == undefined) {\r\n      this.tasks.push(taskAux);\r\n      this.message.messagem = `Tarefa ${taskAux.name} adicionada com sucesso`;\r\n      this.message.status = true;\r\n    }\r\n    else{\r\n      this.message.messagem = `Tarefa ${taskAux.name} já existe`;\r\n      this.message.status = false;\r\n    }\r\n  }\r\n\r\n  editTask(){\r\n\r\n  }\r\n\r\n  handleEdit(id){\r\n    this.edit = id;\r\n  }\r\n\r\n  handleChecked(id: number): void{\r\n    const aux: TasksProps[] = [...this.tasks];\r\n    aux.forEach((task: TasksProps) => {\r\n      if(id === task.id){ task.checked = !task.checked }\r\n    })\r\n\r\n    this.tasks = aux;\r\n  }\r\n\r\n  deleteTask(id: number): void{\r\n    if(window.confirm(`Quer deletar a tarefa ${this.tasks.find((task) => task.id === id)?.name}?`)){\r\n      const aux: TasksProps[] = this.tasks.filter((task) => task.id !== id)\r\n  \r\n      this.message.messagem = `Tarefa ${this.tasks.find((task) => task.id === id)?.name} deletada com sucesso`;\r\n      this.message.status = true;\r\n\r\n      setTimeout(() => {\r\n        this.message.messagem = \"\";\r\n        this.tasks = aux;\r\n      }, 3000)\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}